setwd("Desktop")
library(Seurat)
library(dplyr)
library(ggplot2)
library(data.table)
Patient1.Data <- Read10X(data.dir = "Patient1")
Patient2.Data <- Read10X(data.dir = "Patient2")
Patient3.Data <- Read10X(data.dir = "Patient3")
Patient4.Data <- Read10X(data.dir = "Patient4")
Patient1 <- CreateSeuratObject(counts = Patient1.Data, project = "Patient1", min.cells = 3, min.features = 200)
Patient2 <- CreateSeuratObject(counts = Patient2.Data, project = "Patient2", min.cells = 3, min.features = 200)
Patient3 <- CreateSeuratObject(counts = Patient3.Data, project = "Patient3", min.cells = 3, min.features = 200)
Patient4 <- CreateSeuratObject(counts = Patient4.Data, project = "Patient4", min.cells = 3, min.features = 200)
write.table(rownames(Patient1), file = "Documents/rownames.txt", sep = "\t")
Patient1[["percent.mt"]] <- PercentageFeatureSet(Patient1, pattern = "^MT-")
Patient2[["percent.mt"]] <- PercentageFeatureSet(Patient2, pattern = "^MT-")
Patient3[["percent.mt"]] <- PercentageFeatureSet(Patient3, pattern = "^MT-")
Patient4[["percent.mt"]] <- PercentageFeatureSet(Patient4, pattern = "^MT-")
VlnPlot(Patient1, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
VlnPlot(Patient2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
VlnPlot(Patient3, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
VlnPlot(Patient4, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Patient1 <- subset(Patient1, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 25)
Patient2 <- subset(Patient2, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 25)
Patient3 <- subset(Patient3, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 25)
Patient4 <- subset(Patient4, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 25)
Patient1 <- NormalizeData(Patient1)
Patient2 <- NormalizeData(Patient2)
Patient3 <- NormalizeData(Patient3)
Patient4 <- NormalizeData(Patient4)
Patient1 <- FindVariableFeatures(Patient1, selection.method = "vst", nfeatures = 5000)
VariableFeaturePlot(Patient1)
Patient2 <- FindVariableFeatures(Patient2, selection.method = "vst", nfeatures = 5000)
Patient3 <- FindVariableFeatures(Patient3, selection.method = "vst", nfeatures = 5000)
Patient4 <- FindVariableFeatures(Patient4, selection.method = "vst", nfeatures = 5000)
saveRDS(Patient1, file = "Documents/Brad Data/Patient1.RDS")
saveRDS(Patient2, file = "Documents/Brad Data/Patient2.RDS")
saveRDS(Patient3, file = "Documents/Brad Data/Patient3.RDS")
saveRDS(Patient4, file = "Documents/Brad Data/Patient4.RDS")
saveRDS(Patient4, file = "Documents/Brad Data/Patient4.RDS")
HumanOE.anchors <- FindIntegrationAnchors(object.list = c(Patient1, Patient2, Patient3, Patient4), dims = 1:50)
HumanOE.Integrated <- IntegrateData(anchorset = HumanOE.anchors, dims = 1:50)
all.genes <- rownames(HumanOE.Integrated)
HumanOE.Integrated <- ScaleData(HumanOE.Integrated, features = all.genes)
HumanOE.Integrated <- RunPCA(HumanOE.Integrated, npcs = 70)
ElbowPlot(HumanOE.Integrated)
HumanOE.Integrated <- FindNeighbors(HumanOE.Integrated, dims = 1:70)
HumanOE.Integrated <- FindClusters(HumanOE.Integrated, resolution = 1)
HumanOE.Integrated <- RunUMAP(HumanOE.Integrated, dims = 1:70)
DimPlot(HumanOE.Integrated, reduction = "umap", label = TRUE)
FeaturePlot(HumanOE.Integrated, features = "PTPRC")
HumanOE.Integrated.AvgExp <- AverageExpression(HumanOE.Integrated)
HumanOE.Integrated.AvgExp <- AverageExpression(HumanOE.Integrated, assays = "RNA")
write.table(HumanOE.Integrated.AvgExp, file = "Documents/Brad Data/HumanOE_Integrated_AvgExp.txt", sep = "\t")
#Subset of Immune Cells -- Clusters 4, 6, 19, 22, 28, 29, 31, 32, 33, 36
HumanOE.Immune <- subset(HumanOE.Integrated, idents = c("4", "6", "19", "22", "28", "29", "31", "32", "33", "36"))
saveRDS(HumanOE.Immune, file = "HumanOE_Immune.RDS")

library(Seurat)
library(dplyr)
library(data.table)
library(ggplot2)
HumanOE <- readRDS(file = "HumanOE_Immune.RDS")
Bcells <- subset(HumanOE, idents = c("3", "9", "13", "15"))
all.genes <- rownames(Bcells)
Bcells <- ScaleData(Bcells, features = all.genes)
Bcells <- RunPCA(Bcells, npcs = 75)
Bcells <- FindNeighbors(Bcells, dims = 1:75)
Bcells <- FindClusters(Bcells, resolution = 0.1)
Bcells <- RunUMAP(Bcells, dims= 1:75)
Bcells.Markers.RNA <- FindAllMarkers(Bcells, assay = "RNA", only.pos = TRUE)
Bcells.RNAMarkers.Top50 <- Bcells.Markers.RNA %>% group_by(cluster) %>% top_n(n = 50, wt = avg_log2FC)
write.table(Bcells.RNAMarkers.Top50, file = "Bcells_RNAMarkers_Top50.txt", sep = "\t")
DimPlot(Bcells, reduction = "umap", cols = c("#009988", "#CC3311"))
DimPlot(Bcells, reduction = "umap", cols = c("#EE3377", "#33BBEE", "#EE7733", "#0077BB"), group.by = "orig.ident")
Markers <- FindMarkers(Bcells, assay = "RNA", ident.1 = "0", ident.2 = "1", min.pct = 0, logfc.threshold = 0)
library(EnhancedVolcano)
volcanoPlotfinal <- EnhancedVolcano(Markers, lab = rownames(Markers), x = "avg_log2FC", y = "p_val_adj", selectLab = c("MS4A1", "HLA-DRA", "LTB", "HLA-DRB1", "HLA-DQB1", "HLA-DQA1", "CD52", "CD74", "CD37", "CD69", "CD83", "CD22", "HLA-DRB5", "HLA-DMB", "CXCR4", "IGHA1", "IGHA2", "CD38", "PRDM1", "JCHAIN", "MZB1", "PRDX4", "SSR4", "XBP1", "CCL3", "RGS1", "TNFRSF17", "SEC11C", "IGKC", "SDC1"), pointSize = 1, labSize = 3, col = c("grey", "grey", "grey", "orange"))
savehistory(file = "VolcanoPlot.RHistory")
saveRDS(Bcells, file = "Bcells_Durante_HumanOE.RDS")
savehistory(file = "Bcells_HumanOE_Durante.RHistory")
